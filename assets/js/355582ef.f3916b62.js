"use strict";(self.webpackChunktext_ssg_docs=self.webpackChunktext_ssg_docs||[]).push([[654],{204:function(e){e.exports=JSON.parse('{"blogPosts":[{"id":"lab-2-create-issue-and-pull-requests","metadata":{"permalink":"/text-ssg-docs/blog/lab-2-create-issue-and-pull-requests","editUrl":"https://github.com/Kevan-Y/text-ssg-docs/edit/main/blog/2021-09-24-lab-2-create-issue-and-pull-requests.md","source":"@site/blog/2021-09-24-lab-2-create-issue-and-pull-requests.md","title":"Lab 2 - Create issue and pull requests","description":"Introduction","date":"2021-09-24T00:00:00.000Z","formattedDate":"September 24, 2021","tags":[{"label":"opensource","permalink":"/text-ssg-docs/blog/tags/opensource"}],"readingTime":1.45,"truncated":false,"authors":[{"name":"Kevan Yang","title":"Full stack developer","url":"https://kevanyxg.vercel.app/","imageURL":"https://github.com/kevan-y.png","key":"kevanY"}],"nextItem":{"title":"Lab 1 reviewing other student code sources","permalink":"/text-ssg-docs/blog/lab-1-reviewing-other-student-code-sources"}},"content":"## Introduction\\r\\n\\r\\nFor my second lab, I found a contributor to my code. They have to implement markdown support in my repo. I have to do the same thing to support. My contributor was [Duc Bui Manh](https://github.com/DukeManh).\\r\\n\\r\\nI started to create a [Issue#8](https://github.com/DukeManh/OSD_SSG/issues/8) on his code, and describe what markdown I will implement to his code. After that, I started to read through his code. It was coded in TypeScript which is the same as JavaScript but with types.\\r\\nThe code workflow wasn\'t hard to follow. I implemented a function to process all markdown features. In that function, I\'m calling all other process markdowns to change markdown to HTML.\\r\\nI also added some checks such as only accept `.txt` and `.md`.\\r\\nAfter finishing my code I created a pull request [PR#9](https://github.com/DukeManh/OSD_SSG/pull/9) and requested [Duc Bui Manh](https://github.com/DukeManh) to review my change.\\r\\nHe gave me some feedback to change. I had some redundant code. After fixing it I pushed back to remote and re-request to review.\\r\\n\\r\\n[Duc Bui Manh](https://github.com/DukeManh) has to implement his markdown feature to my code. He first created an [Issue#15](https://github.com/Kevan-Y/text-ssg/issues/15), then created a pull request [PR#16](https://github.com/Kevan-Y/text-ssg/pull/16) for his change. The way of implementing a smarter than my way using some regex. I pull his code and do some testing on my side. I found that the markdown for the link was wrong, the href contains some `<i>` tags. Also, the heading was wrapped with `<p>` tag which doesn\'t match the HTML5 standard. I had him change it before merging it.\\r\\n\\r\\n## Conclusion\\r\\n\\r\\nOverall this lab helped me to learn to read some else code and implement the markdown feature without changing his workflow. And also expose my workflow to others and learn how they implement it.\\r\\n\\r\\n**GitHub:**\\r\\n[Kevan-Y](https://github.com/Kevan-Y)\\r\\n[DukeManh](https://github.com/DukeManh)"},{"id":"lab-1-reviewing-other-student-code-sources","metadata":{"permalink":"/text-ssg-docs/blog/lab-1-reviewing-other-student-code-sources","editUrl":"https://github.com/Kevan-Y/text-ssg-docs/edit/main/blog/2021-09-15-lab-1-reviewing-other-student-code-sources.md","source":"@site/blog/2021-09-15-lab-1-reviewing-other-student-code-sources.md","title":"Lab 1 reviewing other student code sources","description":"In lab 1, I have to network through Slack to find a partner to review and test my SSG code. I meet a new friend named Eugene Chung on slack.","date":"2021-09-15T00:00:00.000Z","formattedDate":"September 15, 2021","tags":[{"label":"opensource","permalink":"/text-ssg-docs/blog/tags/opensource"}],"readingTime":1.76,"truncated":false,"authors":[{"name":"Kevan Yang","title":"Full stack developer","url":"https://kevanyxg.vercel.app/","imageURL":"https://github.com/kevan-y.png","key":"kevanY"}],"prevItem":{"title":"Lab 2 - Create issue and pull requests","permalink":"/text-ssg-docs/blog/lab-2-create-issue-and-pull-requests"},"nextItem":{"title":"Node.js static site generator (Release 0.1.0)","permalink":"/text-ssg-docs/blog/node-js-static-site-generator-release"}},"content":"In lab 1, I have to network through Slack to find a partner to review and test my SSG code. I meet a new friend named Eugene Chung on slack.\\r\\n\\r\\nTesting and reviewing code might sound difficult, but with my previous co-op experience. I got better and better to read someone else code. It is like reviewing a Pull request.\\r\\nNo code is perfect, they will be always a bug, improper formatting, unnecessary comment. One of the issue reading his code was the code wasn\'t properly formatted and they are random comment all over the place. [Issue #2](https://github.com/ycechungAI/cmd-ssg/issues/2), [Issue #3](https://github.com/ycechungAI/cmd-ssg/issues/3). After creating those issue Eugene fixed within a day and the code was much nicer to read.\\r\\n\\r\\nAfter I reviewed Eugene code, he had to review mine. I always like people to review my code and tell me what I can improve on. For me it is a way to learn how to write efficient code in the future.\\r\\nWhen Eugene testing my SSG code, even with some error checking I put in place he was still able to find some bug in my code. One of the issues [Issue #1](https://github.com/Kevan-Y/text-ssg/issues/1) he found was my code wasn\'t checking recursively for any .txt files. One of the solutions is to implement a recursive check to check if there is any .txt file in the children\'s directory. The second big bug [Issue #5](https://github.com/Kevan-Y/text-ssg/issues/5) was that the generated HTML file does not pass HMTL5 standards. I notice that for a .txt file that has a name with space, it will convert to an HTML file with name + space. The solution was to replace all space with hyphens when creating the HTML file. The same logic applies to folders too.\\r\\n\\r\\nIn the end, fixing my issue was not too hard thanks to Eugene\'s description. I was able to identify the bug part quickly in the code. Testing and reviewing someone else code was the same steps when I was working as a QA. I had to test other people\'s scripts and add feedback in the Pull Request.\\r\\n\\r\\nMy GitHub Repo: [text-ssg](https://github.com/Kevan-Y/text-ssg)\\r\\nEugene GitHub Repo: [cmd-ssg](https://github.com/ycechungAI/cmd-ssg)"},{"id":"node-js-static-site-generator-release","metadata":{"permalink":"/text-ssg-docs/blog/node-js-static-site-generator-release","editUrl":"https://github.com/Kevan-Y/text-ssg-docs/edit/main/blog/2021-09-15-node-js-static-site-generator-release.md","source":"@site/blog/2021-09-15-node-js-static-site-generator-release.md","title":"Node.js static site generator (Release 0.1.0)","description":"For the first assignment in OSD600, we have to create a CLI static site generator using any language of ours choice. I went with node.js, because I need some projects in my GitHub in node.js.","date":"2021-09-15T00:00:00.000Z","formattedDate":"September 15, 2021","tags":[{"label":"opensource","permalink":"/text-ssg-docs/blog/tags/opensource"},{"label":"beginners","permalink":"/text-ssg-docs/blog/tags/beginners"},{"label":"javascript","permalink":"/text-ssg-docs/blog/tags/javascript"}],"readingTime":2.18,"truncated":false,"authors":[{"name":"Kevan Yang","title":"Full stack developer","url":"https://kevanyxg.vercel.app/","imageURL":"https://github.com/kevan-y.png","key":"kevanY"}],"prevItem":{"title":"Lab 1 reviewing other student code sources","permalink":"/text-ssg-docs/blog/lab-1-reviewing-other-student-code-sources"},"nextItem":{"title":"Console.log(\'Hello World!\')","permalink":"/text-ssg-docs/blog/hello-world"}},"content":"For the first assignment in OSD600, we have to create a CLI static site generator using any language of ours choice. I went with node.js, because I need some projects in my GitHub in node.js.\\r\\nThroughout this lab, I learned how to uses some new packages such as yargs, chalk, figlet.\\r\\nThe concept seems to be simple to implement, but there is a lot of challenge to go through implementing all the core and optional features.\\r\\nOne of the challenges was to learn how to use async/await. It was a bit tricky but playing with the code and watching some tutorials helped me a lot.\\r\\nThe second most challenging was to write a function to get all the .txt files names recursively.\\r\\n\\r\\n## Installation\\r\\n\\r\\n- clone the repo\\r\\n- open the folder\\r\\n- run `npm i`\\r\\n- run `npm install -g .`\\r\\n\\r\\n## Usage\\r\\n\\r\\n```bash\\r\\nssg --input <path>\\r\\n\\r\\nssg --input <path> --output <path>\\r\\n\\r\\nssg --input <path> --output <path> --stylesheet <URL>\\r\\n\\r\\nssg -i <path> -o <path> -s <URL>\\r\\n```\\r\\n\\r\\n## Command option / feature\\r\\n\\r\\n`-i` or `--input` accept a .txt file or folder to read data from. If it is a folder it supports deep tree of files and folders. (Required)\\r\\n\\r\\n`-o` or `--output` accept an existing directory to output generated html to. If option not specified, it will create and output files to `dist` folder. (Optional)\\r\\n\\r\\n`-s` or `--stylesheet` accept a CSS URL. If option not specified, it will uses default stylesheet. (Optional).\\r\\n\\r\\n`-h` or `--help` shows list of option, usage, and examples.\\r\\n\\r\\n`-v` or `--version` shows the version of the CLI\\r\\n\\r\\nIf the first line of the .txt is followed by two blank lines, it will populate the `<title>...</title>` and `<h1>...</h1>`.\\r\\n\\r\\nGenerate a menu page `index.html` which has relative links to each of the generated HTML files.\\r\\n\\r\\nNew paragraph is separated by a line.\\r\\n\\r\\n## Example\\r\\n\\r\\n### Input file `test.txt`\\r\\n\\r\\n```txt\\r\\nThis is the title\\r\\n\\r\\n\\r\\nHello world,\\r\\n2021\\r\\n\\r\\nThis is a static site\\r\\n\\r\\nI love programing\\r\\n```\\r\\n\\r\\n### Command run\\r\\n\\r\\n```bash\\r\\nssg -i test.txt -s \'https://cdn.jsdelivr.net/npm/water.css@2/out/water.css\'\\r\\n```\\r\\n\\r\\n### Output file\\r\\n\\r\\n### `dist/test.html`\\r\\n\\r\\n```html\\r\\n<!DOCTYPE html>\\r\\n<html lang=\\"en\\">\\r\\n\\t<head>\\r\\n\\t\\t<meta charset=\\"UTF-8\\" />\\r\\n\\t\\t<title>Home</title>\\r\\n\\t\\t<meta http-equiv=\\"X-UA-Compatible\\" content=\\"IE=edge\\" />\\r\\n\\t\\t<meta name=\\"viewport\\" content=\\"width=device-width, initial-scale=1.0\\" />\\r\\n\\t\\t<link\\r\\n\\t\\t\\trel=\\"stylesheet\\"\\r\\n\\t\\t\\thref=\\"https://cdn.jsdelivr.net/npm/water.css@2/out/water.css\\"\\r\\n\\t\\t/>\\r\\n\\t</head>\\r\\n\\r\\n\\t<body>\\r\\n\\t\\t<h1>Home menu</h1>\\r\\n\\t\\t<h2>Summary</h2>\\r\\n\\t\\t<ul>\\r\\n\\t\\t\\t<li><a href=\\"test.html\\">test</a></li>\\r\\n\\t\\t</ul>\\r\\n\\t</body>\\r\\n</html>\\r\\n```\\r\\n\\r\\n### `dist/index.html`\\r\\n\\r\\n```html\\r\\n<!DOCTYPE html>\\r\\n<html lang=\\"en\\">\\r\\n\\t<head>\\r\\n\\t\\t<meta charset=\\"UTF-8\\" />\\r\\n\\t\\t<title>This is the title</title>\\r\\n\\t\\t<meta http-equiv=\\"X-UA-Compatible\\" content=\\"IE=edge\\" />\\r\\n\\t\\t<meta name=\\"viewport\\" content=\\"width=device-width, initial-scale=1.0\\" />\\r\\n\\t\\t<link\\r\\n\\t\\t\\trel=\\"stylesheet\\"\\r\\n\\t\\t\\thref=\\"https://cdn.jsdelivr.net/npm/water.css@2/out/water.css\\"\\r\\n\\t\\t/>\\r\\n\\t</head>\\r\\n\\r\\n\\t<body>\\r\\n\\t\\t<h1>This is the title</h1>\\r\\n\\t\\t<p>Hello world,2021</p>\\r\\n\\t\\t<p>This is a static site</p>\\r\\n\\t\\t<p>I love programing</p>\\r\\n\\t</body>\\r\\n</html>\\r\\n```\\r\\n\\r\\n## Project Links\\r\\n\\r\\n**Sample of file generated**: https://text-ssg.vercel.app/\\r\\n**GitHub Repo**: https://github.com/Kevan-Y/text-ssg"},{"id":"hello-world","metadata":{"permalink":"/text-ssg-docs/blog/hello-world","editUrl":"https://github.com/Kevan-Y/text-ssg-docs/edit/main/blog/2021-09-07-hello-world.md","source":"@site/blog/2021-09-07-hello-world.md","title":"Console.log(\'Hello World!\')","description":"Who Am I?","date":"2021-09-07T00:00:00.000Z","formattedDate":"September 7, 2021","tags":[{"label":"opensource","permalink":"/text-ssg-docs/blog/tags/opensource"},{"label":"beginners","permalink":"/text-ssg-docs/blog/tags/beginners"},{"label":"webdev","permalink":"/text-ssg-docs/blog/tags/webdev"}],"readingTime":1.005,"truncated":false,"authors":[{"name":"Kevan Yang","title":"Full stack developer","url":"https://kevanyxg.vercel.app/","imageURL":"https://github.com/kevan-y.png","key":"kevanY"}],"prevItem":{"title":"Node.js static site generator (Release 0.1.0)","permalink":"/text-ssg-docs/blog/node-js-static-site-generator-release"}},"content":"## Who Am I?\\n\\nI am Kevan Yang from [Martinique](https://en.wikipedia.org/wiki/Martinique) (small French Department island), and this is my first blog in my life. I\'m not a person that likes writing\ud83d\ude05.\\nI\'m currently studying [Computer Programming & Analysis at Seneca College](https://www.senecacollege.ca/programs/fulltime/CPA.html).\\nThe reason I am taking OSD600 is that it is a challenging class, with the freedom to code. I also wanted to have some experience in open source development and meet some developers to share my passion with.\\n\\n## Currently\\n\\nI am currently living in Toronto, Ontario, with the pandemic situation I did not go anywhere.\\nI mostly use my free time to code and learn, for most of my projects, I use [Next.Js](https://nextjs.org/), [TailwindCSS](https://tailwindcss.com/), [Typescript](https://www.typescriptlang.org/), [Mongodb](https://www.mongodb.com/), [Cypress](https://www.cypress.io/).\\n\\n## Open source repo\\n\\nThe trending repository I have chosen is the [web3-react](https://github.com/NoahZinsmeister/web3-react). It is because the web3 to have a new way to login, it allows to login with crypto. This allows us to control our private data and decentralize our data. The data will be store in the blockchain which increases security. This repo is kind of like a React wrapper for web3. Which makes it much more simple to build a modern ethereum app.\\n\\nCheers! \ud83e\udd42\\n\\n**GitHub**: [Kevan-Y](https://github.com/Kevan-Y)\\n**LinkedIn**: [kevan-yang](https://www.linkedin.com/in/kevan-yang/)"}]}')}}]);